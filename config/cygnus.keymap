/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

// #include <input/processors.dtsi>

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 51 52 53 48 49 50>;
        };

        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50 51 52 53>;
        };

        layer_tap_quick: layer_tap_quick {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_QUICK";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            quick-tap-ms = <200>;
        };

        qexcl: qexcl {
            compatible = "zmk,behavior-mod-morph";
            label = "QEXCL";
            bindings = <&kp QUESTION>, <&kp EXCL>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        comma_morph: comma_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_MORPH";
            bindings = <&kp COMMA>, <&kp SEMI>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dot_morph: dot_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_MORPH";
            bindings = <&kp DOT>, <&kp COLON>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        lpar_morph: lpar_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "LPAR_MORPH";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        rpar_morph: rpar_morph {
            compatible = "zmk,behavior-mod-morph";
            label = "RPAR_MORPH";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GT>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        homerow_gui_left: homerow_gui_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_GUI_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 51 52 53>;
        };

        homerow_gui_right: homerow_gui_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_GUI_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 48 49 50>;
        };
    };

    combos {
        compatible = "zmk,combos";

        left-num-plus {
            bindings = <&kp PLUS>;
            key-positions = <16 28>;
            layers = <5>;
        };

        left-num-minus {
            bindings = <&kp MINUS>;
            key-positions = <28 40>;
            layers = <5>;
        };

        left-num-multiply {
            bindings = <&kp STAR>;
            key-positions = <15 27>;
            layers = <5>;
        };

        left-num-divide {
            bindings = <&kp SLASH>;
            key-positions = <27 39>;
            layers = <5>;
        };

        left-num-dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <17 29>;
            layers = <5>;
        };

        left-num-equal {
            bindings = <&kp EQUAL>;
            key-positions = <29 41>;
            layers = <5>;
        };

        right-num-dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <18 30>;
            layers = <5>;
        };

        right-num-equal {
            bindings = <&kp EQUAL>;
            key-positions = <30 42>;
            layers = <5>;
        };

        dollar {
            bindings = <&kp DOLLAR>;
            key-positions = <16 28>;
        };

        percent {
            bindings = <&kp PERCENT>;
            key-positions = <17 29>;
        };

        underscore {
            bindings = <&kp UNDER>;
            key-positions = <30 42>;
            layers = <0>;
        };

        caret {
            bindings = <&kp CARET>;
            key-positions = <18 30>;
        };

        tilde {
            bindings = <&kp TILDE>;
            key-positions = <41 29>;
        };

        equal {
            bindings = <&kp EQUAL>;
            key-positions = <40 28>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <39 27>;
        };

        pound {
            bindings = <&kp POUND>;
            key-positions = <27 15>;
        };

        at {
            bindings = <&kp AT>;
            key-positions = <14 26>;
        };

        grave {
            bindings = <&kp GRAVE>;
            key-positions = <26 38>;
        };

        plus {
            bindings = <&kp PLUS>;
            key-positions = <31 19>;
        };

        minus {
            bindings = <&kp MINUS>;
            key-positions = <31 43>;
        };

        star {
            bindings = <&kp STAR>;
            key-positions = <32 20>;
        };

        forwardslash {
            bindings = <&kp SLASH>;
            key-positions = <32 44>;
        };

        ampersand {
            bindings = <&kp AMPS>;
            key-positions = <21 33>;
        };

        pipe {
            bindings = <&kp PIPE>;
            key-positions = <45 33>;
        };

        left_parenthesis {
            bindings = <&lpar_morph>;
            key-positions = <32 31>;
        };

        right_parenthesis {
            bindings = <&rpar_morph>;
            key-positions = <33 32>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <44 43>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <44 45>;
        };

        ctrl-alt-del {
            bindings = <&kp LC(LA(DEL))>;
            key-positions = <14 15 16>;
        };

        ctrl-shift-s {
            bindings = <&kp LC(LS(S))>;
            key-positions = <16 15>;
        };

        shift-win-s {
            bindings = <&kp LS(LG(S))>;
            key-positions = <15 14>;
        };

        left-enter {
            bindings = <&kp ENTER>;
            key-positions = <41 50>;
        };

        right-enter {
            bindings = <&kp ENTER>;
            key-positions = <42 51>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "BAS";
            bindings = <
&kp ESCAPE    &kp N1                        &kp N2           &kp N3            &kp N4             &kp N5         &kp N6                        &kp N7              &kp N8            &kp N9            &kp N0                             &trans
&kp TAB       &kp Q                         &kp W            &kp E             &kp R              &kp T          &kp Y                         &kp U               &kp I             &kp O             &kp P                              &trans
&kp LEFT_ALT  &homerow_gui_left LEFT_GUI A  &hml LEFT_ALT S  &hml LCTRL D      &hml LEFT_SHIFT F  &kp G          &kp H                         &hmr RIGHT_SHIFT J  &hmr RCTRL K      &hmr RIGHT_ALT L  &homerow_gui_right RIGHT_GUI APOS  &kp RIGHT_ALT
&kp LSHFT     &kp Z                         &kp X            &kp C             &kp V              &kp B          &kp N                         &kp M               &comma_morph      &dot_morph        &qexcl                             &kp RIGHT_SHIFT
                                                             &mt LCTRL ESCAPE  &lt 3 TAB          &lt 5 SPACE    &layer_tap_quick 5 BACKSPACE  &lt 2 ENTER         &mt RCTRL ESCAPE
            >;
        };

        game_layer {
            display-name = "GAM";
            bindings = <
&trans        &kp N1  &kp N2  &kp N3            &kp N4     &kp N5       &kp N6           &kp N7                    &kp N8            &kp N9  &kp N0   &trans
&kp TAB       &kp Q   &kp W   &kp E             &kp R      &kp T        &kp Y            &kp U                     &kp I             &kp O   &kp P    &kp BSPC
&kp LEFT_ALT  &kp A   &kp S   &kp D             &kp F      &kp G        &kp H            &kp J                     &kp K             &kp L   &kp SQT  &trans
&kp LSHFT     &kp Z   &kp X   &kp C             &kp V      &kp B        &kp N            &kp M                     &trans            &trans  &trans   &trans
                              &mt LCTRL ESCAPE  &lt 5 TAB  &kp SPACE    &lt 0 BACKSPACE  &layer_tap_quick 2 ENTER  &mt RCTRL ESCAPE
            >;
        };

        nav_layer {
            display-name = "NAV";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &trans        &kp LC(UP_ARROW)  &trans         &trans        &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PG_UP      &kp LC(LEFT)  &kp UP            &kp LC(RIGHT)  &kp LC(BSPC)  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp LEFT      &kp DOWN          &kp RIGHT      &kp RCTRL     &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans         &kp HOME      &kp LC(DOWN)      &kp END        &trans        &trans
                        &trans  &trans  &trans    &kp SPACE      &trans        &trans
            >;
        };

        mouse_layer {
            display-name = "MOU";
            bindings = <
&trans  &trans  &trans          &trans          &trans           &trans            &trans           &trans          &trans         &trans    &trans           &trans
&trans  &trans  &mkp MB4        &mmv MOVE_UP    &mkp MB5         &msc SCRL_UP      &trans           &msc SCRL_UP    &trans         &trans    &trans           &trans
&trans  &mo 4   &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &msc SCRL_DOWN    &msc SCRL_LEFT   &mkp MB1        &mkp MB2       &mkp MB3  &msc SCRL_RIGHT  &trans
&trans  &trans  &mkp MB3        &mkp MB2        &mkp MB1         &trans            &trans           &msc SCRL_DOWN  &trans         &trans    &trans           &trans
                                &trans          &trans           &trans            &kp RIGHT_SHIFT  &kp RCTRL       &kp RIGHT_ALT
            >;
        };

        mouse_slow_layer {
            display-name = "SLO";
            bindings = <
&trans  &trans  &trans             &trans             &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans             &mmv MOVE_Y(-400)  &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &mmv MOVE_X(-400)  &mmv MOVE_Y(400)   &mmv MOVE_X(400)  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans             &trans             &trans            &trans    &trans  &trans  &trans  &trans  &trans  &trans
                                   &trans             &trans            &trans    &trans  &trans  &trans
            >;
        };

        num_layer {
            display-name = "NUM";
            bindings = <
&none            &none             &none   &none   &none   &none             &none           &none   &none   &none   &none             &none
&kp DELETE       &kp BACKSPACE     &kp N9  &kp N8  &kp N7  &kp KP_NUMLOCK    &kp KP_NUMLOCK  &kp N7  &kp N8  &kp N9  &kp BACKSPACE     &kp DELETE
&lt 6 ENTER      &kp N0            &kp N6  &kp N5  &kp N4  &none             &none           &kp N4  &kp N5  &kp N6  &kp N0            &lt 6 ENTER
&mt POUND UNDER  &mt COMMA PERIOD  &kp N3  &kp N2  &kp N1  &kp ENTER         &kp ENTER       &kp N1  &kp N2  &kp N3  &mt COMMA PERIOD  &mt HASH UNDER
                                           &none   &none   &none             &none           &none   &none
            >;
        };

        f_layer {
            display-name = "FUN";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans     &trans   &trans  &trans  &trans  &trans  &trans
&trans  &trans  &kp F9  &kp F8  &kp F7  &kp F12    &kp F12  &kp F7  &kp F8  &kp F9  &trans  &trans
&trans  &trans  &kp F6  &kp F5  &kp F4  &kp F11    &kp F11  &kp F4  &kp F5  &kp F6  &trans  &trans
&trans  &trans  &kp F3  &kp F2  &kp F1  &kp F10    &kp F10  &kp F1  &kp F2  &kp F3  &trans  &trans
                        &trans  &trans  &trans     &trans   &trans  &trans
            >;
        };

        adjust_layer {
            display-name = "ADJ";

            // -----------------------------------------------------------------------------------------
            // |      |     |     |     |     |     |   |     |      |     |     |     |     |
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none           &none       &none         &none         &none         &none           &none  &none     &none           &none           &none  &none
&bt BT_CLR_ALL  &bt BT_CLR  &none         &none         &none         &tog 1          &none  &none     &none           &none           &none  &none
&none           &none       &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_NXT    &out OUT_TOG    &none  &kp CLCK  &kp KP_NUMLOCK  &kp SCROLLLOCK  &none  &none
&none           &none       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &none           &none  &none     &none           &none           &none  &none
                                          &none         &none         &none           &none  &none     &none
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        game_adj {
            if-layers = <2 5>;
            then-layer = <7>;
        };

        adjust {
            if-layers = <2 3>;
            then-layer = <7>;
        };
    };
};
